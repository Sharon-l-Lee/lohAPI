<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.orgd/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.loharchive.lordlog.skills.SkillsMapper">
    <select id="searchSkills" parameterType="java.util.Map" resultType="com.loharchive.lordlog.search.SearchSkillsDto">
        select s.id as sid, s.name as sname, s.type as stype, s.cooldown, s.slot, s.s_desc, c.cname as cname, c.id as c_id, s.cf_url
        from skills s
            left join characters c on s.c_id = c.id
        <where>
            <if test="keywords != null and keywords.size() > 0">
                <foreach collection="keywords" item="keyword" separator="OR">
                    (
                    s.name like concat('%', #{keyword}, '%')
                    or concat(s.name, s.s_desc) like concat('%', #{keyword}, '%')
                    )
                </foreach>
            </if>
            <if test="elements != null and elements.size()>0">
                and c.element_id in
                <foreach collection="elements" item="element" open="(" separator="," close=")">
                    #{element}
                </foreach>
            </if>
            <if test="jobs != null and jobs.size()>0">
                and c.job_id in
                <foreach collection="jobs" item="job" open="(" separator="," close=")">
                    #{job}
                </foreach>
            </if>
            <if test="acquisitions != null and acquisitions.size()>0">
                and c.acquisition_method in
                <foreach collection="acquisitions" item="acquisition" open="(" separator="," close=")">
                    #{acquisition}
                </foreach>
            </if>
            <if test="summons!= null and summons.size()>0">
                and c.summon_type in
                <foreach collection="summons" item="summon" open="(" separator="," close=")">
                    #{summon}
                </foreach>
            </if>
        </where>
    </select>
</mapper>
